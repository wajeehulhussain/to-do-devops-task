name: To-do App DevOps Pipeline

on:
  push:
    branches: 
      - dev

jobs:
  deploy-iac:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Store Branch Name
        run: echo "Branch_Name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        run: |
          cd iaac
          terraform init

      - name: Plan Terraform changes
        run: |
          cd iaac
          terraform plan -var-file="terraform-tfvars/${Branch_Name}.tfvars" > plan.out

      - name: Prompt for confirmation
        run: |
          cd iaac
          cat plan.out
          terraform apply -var-file="terraform-tfvars/${Branch_Name}.tfvars" --auto-approve

      - name: Get ECR repository URL
        id: get_ecr_url
        run: |
          echo "ECR_REPOSITORY_URL=$(terraform output ecr_repo_url)" >> $GITHUB_ENV
          echo "::set-output name=ecr_repository_url::$(terraform output ecr_repo_url)"

      - name: Save ECR repository URI to secrets
        run: echo "${{ steps.get_ecr_url.outputs.ecr_repository_url }}" >> ${{ github.workspace }}/ecr_repository_url.secret

  docker_build_and_push:
    needs: deploy-iac
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Build and Push
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}".dkr.ecr."${{ secrets.AWS_REGION }}".amazonaws.com
          docker build -t ${{ secrets.ECR_REPOSITORY_URL }}/client ./src/client
          docker push ${{ secrets.ECR_REPOSITORY_URL }}/client
          docker build -t ${{ secrets.ECR_REPOSITORY_URL }}/server ./src/server
          docker push ${{ secrets.ECR_REPOSITORY_URL }}/server
